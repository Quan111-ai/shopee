// PATCH /api/cart/select/:itemId
const CartItem = require("../../models/CartItem");
const { sendResponse } = require("../../helpers/utils");

const selectItem = async (req, res, next) => {
  try {
    const { itemId } = req.params;
    const { isSelected } = req.body;

    console.log("üîß selectItem called");
    console.log("üëâ itemId:", itemId);
    console.log("üëâ isSelected:", isSelected);

    const userId = req.user?._id;
    if (!userId) {
      return sendResponse(res, 401, false, null, "Ng∆∞·ªùi d√πng ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c", "L·ªói");
    }

    if (typeof isSelected !== "boolean") {
      return sendResponse(res, 400, false, null, "Gi√° tr·ªã isSelected kh√¥ng h·ª£p l·ªá", "L·ªói");
    }

    const item = await CartItem.findOneAndUpdate(
      { _id: itemId, userId },
      { isSelected },
      { new: true }
    );

    if (!item) {
      return sendResponse(res, 404, false, null, "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m trong gi·ªè h√†ng", "L·ªói");
    }

    return sendResponse(res, 200, true, item, null, "C·∫≠p nh·∫≠t tr·∫°ng th√°i ch·ªçn s·∫£n ph·∫©m th√†nh c√¥ng");
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i ch·ªçn s·∫£n ph·∫©m:", error);
    next(error);
  }
};

module.exports = selectItem;