const express = require("express");
const router = express.Router();

// üì¶ Import controller
const createProduct = require("../controllers/Product/CreateProduct");
const getAllProducts = require("../controllers/Product/getAllProduct");
const getProductById = require("../controllers/Product/getProductByID");
const updateProduct = require("../controllers/Product/updateProduct");
const deleteProduct = require("../controllers/Product/deleteProduct");
const searchProduct = require("../controllers/Product/searchProduct");
const getPopularProducts = require("../controllers/Product/getPopularProducts");
const rateProduct = require("../controllers/Product/rateProduct");
const getRatings = require("../controllers/Product/getRatings");
const updateRating = require("../controllers/Product/updateRating");
const deleteRating = require("../controllers/Product/deleteRating");

const getProductsByShopLevel = require("../controllers/SellerManager/getProductsByShopLevel");

const { authenticate } = require("../controllers/middleware/authenticate");

// üì¶ Import schema validator v√† middleware validate
const validationMiddleware = require("../controllers/middleware/validation.middleware");
const createProductSchema = require("../controllers/src/productSchemaValidator/createProductSchema");
const updateProductSchema = require("../controllers/src/productSchemaValidator/updateProductSchema");
const getProductByIdSchema = require("../controllers/src/productSchemaValidator/getProductByIdSchema");
const searchProductSchema = require("../controllers/src/productSchemaValidator/searchProductSchema");

// üì¶ Import Multer middleware
const upload = require("../controllers/middleware/multer.middleware");

/*
 * @route   POST /products
 * @desc    T·∫°o s·∫£n ph·∫©m m·ªõi (kh√¥ng c√≥ ·∫£nh)
 */
router.post("/", validationMiddleware(createProductSchema), createProduct);

/*
 * @route   PATCH /products/:id/upload-images
 * @desc    C·∫≠p nh·∫≠t nhi·ªÅu ·∫£nh s·∫£n ph·∫©m
 */
router.patch("/:id/upload-images", authenticate, upload, updateProduct);

/*
 * @route   PUT /products/:id
 * @desc    C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m (kh√¥ng bao g·ªìm ·∫£nh)
 */
router.put("/:id", authenticate, validationMiddleware(updateProductSchema), updateProduct);

/*
 * @route   DELETE /products/:id
 * @desc    X√≥a s·∫£n ph·∫©m
 */
router.delete("/:id", validationMiddleware(getProductByIdSchema, "params"), deleteProduct);

/*
 * @route   GET /products
 * @desc    L·∫•y to√†n b·ªô s·∫£n ph·∫©m
 */
router.get("/", getAllProducts);

/*
 * @route   GET /products/search
 * @desc    T√¨m s·∫£n ph·∫©m theo t·ª´ kho√°
 */
router.get("/search", validationMiddleware(searchProductSchema, "query"), searchProduct);

/*
 * @route   GET /products/popular
 * @desc    L·∫•y c√°c s·∫£n ph·∫©m ph·ªï bi·∫øn
 */
router.get("/popular", getPopularProducts);

/*
 * @route   GET /products/:id
 * @desc    L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
 */
router.get("/:id", validationMiddleware(getProductByIdSchema, "params"), getProductById);

/*
 * @route   POST /products/:productId/rate
 * @desc    Ng∆∞·ªùi d√πng ƒë√°nh gi√° s·∫£n ph·∫©m
 */
router.post("/:productId/rate", authenticate, rateProduct);

/*
 * @route   GET /products/:productId/ratings
 * @desc    L·∫•y t·∫•t c·∫£ ƒë√°nh gi√° c·ªßa s·∫£n ph·∫©m
 */
router.get("/:productId/ratings", getRatings);

/*
 * @route   PATCH /products/:productId/ratings/:ratingId
 * @desc    S·ª≠a ƒë√°nh gi√° s·∫£n ph·∫©m
 */
router.patch("/:productId/ratings/:ratingId", authenticate, updateRating);

/*
 * @route   DELETE /products/:productId/ratings/:ratingId
 * @desc    Xo√° ƒë√°nh gi√° s·∫£n ph·∫©m
 */
router.delete("/:productId/ratings/:ratingId", authenticate, deleteRating);

/*
 * @route   GET /products-by-shop-level?level=Shop Mall
 * @desc    L·∫•y s·∫£n ph·∫©m thu·ªôc c·∫•p ƒë·ªô shop
 */
router.get("/products-by-shop-level", getProductsByShopLevel);

module.exports = router;